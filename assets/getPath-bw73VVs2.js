import{_ as p,j as u,o as m,c as h,x as r,z as c,b as g,A as d,B as l,f,F as S}from"./index-IrkjR3TU.js";import y from"./Loader-IiJhiXOv.js";const v=["src"],w={__name:"AsyncFrame",props:["iframeSrc","iframeStyle","iframeClass"],setup(a){const s=u(!1),o=()=>setTimeout(()=>s.value=!0,0);return(i,n)=>(m(),h(S,null,[r(g("iframe",{src:a.iframeSrc,class:d(a.iframeClass),style:l(a.iframeStyle),frameborder:"0",ref:"frame",onLoad:o},null,46,v),[[c,s.value]]),r(f(y,{class:d([a.iframeClass,"placeholder"]),style:l(a.iframeStyle)},null,8,["class","style"]),[[c,!s.value]])],64))}},A=p(w,[["__scopeId","data-v-0631cf22"]]),e=[{title:"Feedback App",name:"vue3-feedback-widget",stack:["Vue3","Vuetify","Firebase"],tags:["UI","FE","BE","DB"],desc:"",path:"vue3-feedback-widget",orientation:"|",deps:[]},{title:"Weather App",name:"vue-weather-app",stack:["Vue3","axios","i18n","maps"],tags:["UI","FE","API"],desc:`The Vue Weather App is a feature-rich weather application developed using Vue.js. It provides a user-friendly interface with various functionalities. The project structure follows a clean organization, separating components, helpers, and views.

Key Functionalities:
1. City Autocomplete Input: Utilizes the vue3-google-autocomplete package for a user-friendly city input field powered by Google Maps API.
2. API Requests: Utilizes Axios to make API requests to Open-Meteo.com, a free open-source weather API.
3. Current Weather Card: Displays weather information for the current day in a card format.
4. Hourly Temperature Graph: Shows an hourly temperature graph for the current day using the Vue-chartjs plugin.
5. Multiple Weather Blocks: Allows users to create multiple weather blocks for different cities, with a limit of 5 blocks.
6. Favorites Tab: Features a "Favorites" tab where users can add or remove cities, with weather blocks displayed for added cities.
7. Responsiveness: The application is responsive, utilizing SCSS and CSS @media for adaptability.
8. Day/5 Days Toggle: Allows users to toggle between displaying "Day" or "5 Days" weather.
9. Default User Location: Displays weather for the user's location determined by IP address using the Geoapify.com platform.
10. Preloaders: Implements CSS preloader animations during API requests.
11. Multilingual Support: Provides multilingual support for the interface and API responses in English and Ukrainian.
12. Day/Night Mode: Features a toggle between Day and Night theme-view modes.`,path:"vue-weather-app",orientation:"|",deps:["axios ^1.6.2","chart.js ^4.4.0","vue ^3.3.8","vue-chartjs ^5.2.0","vue-i18n ^9.8.0","vue-router ^4.2.5","vue3-google-autocomplete ^0.0.5"]},{title:"Calendar App",name:"e-time",stack:["Vite","Vue3","SCSS"],tags:["UI","FE","API"],desc:"",path:"e-time",orientation:"|",deps:[]},{title:"If GPT was a dish - tech recipe",name:"gpt-cuisine-symphony",stack:["HTML","CSS","JS"],tags:["UI","FE","API"],desc:`In this gastronomic masterpiece, we explore the various ingredients that make up the harmonious blend of GPT-3.5 development. Each component plays a unique role, contributing to the symphony of code and creativity.

This demo has its's interesting story.
Once I was training with GPT-3.5. And I've asked it been directed by internal curiosity.
So I've asked: "if imagine that you are some good\\food
as a complex product
what you are consisting of in percentage and give me diagram if you can draw it with percentage and commenting usecases of each - as in food - what tool had been used on what step of preparing you ?"
That was a funny answer, I've desided to save as this demo! :)`,path:"gpt-cuisine-symphony",orientation:"|",deps:[],white_bg:!0},{title:"React dynamic list of goods",name:"react_dynamic-list-of-goods",stack:["React","CSS","fetch","bulma"],tags:["UI","FE","API"],desc:`Dynamic List of Goods is a React web application that allows you to load and display a list of goods dynamically. It provides various buttons to load different sets of goods, including all goods, the first five goods, and red goods. This project demonstrates React component rendering, dynamic data loading, and error handling. It is built using React, Bulma CSS, and Font Awesome icons.

Was enjoyble to animate this fetched data displaying smoothily. Bulma is simple and nice, so I like it too.`,path:"react_dynamic-list-of-goods",orientation:"|",deps:["@cypress/react ^5.12.4","bulma ^0.9.3","postcss ^8.4.12","react ^17.0.2","react-dom ^17.0.2","react-scripts ^4.0.3"],white_bg:!0},{title:"Rainbow divs toggler",name:"div-toggle-colorizer",stack:["HTML","CSS","JS"],tags:["UI","FE","API"],desc:"",path:"div-toggle-colorizer",orientation:"|",deps:[]},{title:"React Restaurant Landing App",name:"restaurant-react",stack:["HTML","CSS","JS","React"],tags:["UI","FE","API"],desc:"This is an example how easy is component-based approach to use in React.js, how easy and quick to prepair some landing page like this for any sort of bussiness representation.",path:"restaurant-react",orientation:"|",deps:["@testing-library/jest-dom ^5.16.5","@testing-library/react ^13.4.0","@testing-library/user-event ^13.5.0","react ^18.2.0","react-dom ^18.2.0","react-icons ^4.6.0","react-scripts 5.0.1","web-vitals ^2.1.4"]},{title:"React BEM responsive landing",name:"gpt3-react",stack:["React","HTML","CSS"],tags:["UI","FE","API"],desc:"",path:"gpt3-react",orientation:"|",deps:[]},{title:"Vue Weather Forecast App",name:"weather-app",stack:["HTML","CSS","JS","Vue"],tags:["UI","FE","API"],desc:`The Vue.js Weather App is a simple web application that allows users to view weather information for different cities. It provides real-time weather data, including minimum and maximum temperatures, for selected locations.

Features:
+ View weather data for multiple cities.
+ Sort the list of cities by name, minimum temperature, or maximum temperature.
+ Add new cities to the list.
+ Remove cities from the list.
+ Responsive design for both landscape and portrait orientations.
+ User-friendly interface.

'nuff said. Just app with Vue.js - Progressive JavaScript Framework!`,path:"weather-app",orientation:"|",deps:["core-js ^3.8.3","vue ^3.2.13"]},{title:"Vue Grocery Store with Cart",name:"food-cart-vue",stack:["HTML","CSS","JS","Vue"],tags:["UI","FE","API"],desc:"",path:"food-cart-vue",orientation:"|",deps:[]},{title:"React Live-coding - Cars App",name:"react_live_coding_cars_table_task",stack:["HTML","CSS","JS","React"],tags:["UI","FE","API"],desc:`Here is just hour live-coding result displayed.
The task was to display table of cars with working lazy search and filtering by color. It's really simple!..`,path:"react_live_coding_cars_table_task",orientation:"|",deps:[],white_bg:!0},{title:"Site with sticky header Example",name:"react_decompose",stack:["HTML","CSS","JS"],tags:["UI","FE"],desc:"",path:"react_decompose",orientation:"|",deps:[]},{title:"HTML5 Transforming JSON to List",name:"json-list",stack:["HTML","CSS","JS"],tags:["UI","FE","API"],desc:"JSON List is a simple web application that fetches JSON data from the https://jsonplaceholder.typicode.com/ API and displays it in a structured list format. This project demonstrates how to fetch and display JSON data using HTML, CSS, and JavaScript.",path:"json-list",orientation:"|",deps:[]},{title:"Bykes Store Landing Page",name:"layout_miami",stack:["HTML","CSS","SCSS","JS"],tags:["UI","FE","API"],desc:"",path:"layout_miami",orientation:"|",deps:[]},{title:"Multilayout Clock Widget",name:"lunar-solar-time",stack:["HTML","CSS","SCSS","JS"],tags:["UI","FE","API"],desc:"Project is inspired by idea of creating versatile calendar, that would calculate and display correct lunar day phase.",path:"lunar-solar-time",orientation:"|",deps:["nodemon ^2.0.22","sass ^1.62.1","astronomia ^4.1.1","julian ^0.2.0"]},{title:"fireSnow - snowfall background",name:"fireSnow",stack:["HTML","CSS","SCSS"],tags:["UI","FE","API"],desc:"FIRESNOWÂ® is a web page designed to create a captivating visual experience. It features falling snowflakes over a dark background, accompanied by animated text. The project aims to showcase creative CSS techniques for animation and styling. The project's HTML structure is minimal, with a basic layout consisting of a <div> element for snowflakes and sections for header and footer text. The document's metadata, including the title and favicon, is also defined.",path:"fireSnow",orientation:"|",deps:[]},{title:"Watch Widget SCSS",name:"layout_stop-watch",stack:["SCSS","SASS","HTML","CSS"],tags:["UI","FE","API"],desc:"",path:"layout_stop-watch",orientation:"|",deps:[],white_bg:!0},{title:"AðŸ’žB",name:"AIB",stack:["HTML","CSS","JS"],tags:["FE","JS"],desc:`The AIB project is a web-based application showcasing various HTML, CSS, and JavaScript techniques to create an interactive and visually appealing web experience. This README provides an overview of the project's key features and highlights unique tags, attributes, properties, and techniques used in the code.

All had been begun from strict desire to implement shiny sing logo animated, moreover for development purposes area react on click, - square change its's color to white after first click and to green after second one click on it.`,path:"AIB",orientation:"|",deps:[]}],t=[{title:"AðŸ’žB",name:"AIB",stack:["HTML","CSS","JS"],tags:["FE","JS"],desc:`The AIB project is a web-based application showcasing various HTML, CSS, and JavaScript techniques to create an interactive and visually appealing web experience. This README provides an overview of the project's key features and highlights unique tags, attributes, properties, and techniques used in the code.

All had been begun from strict desire to implement shiny sing logo animated, moreover for development purposes area react on click, - square change its's color to white after first click and to green after second one click on it.`,path:"AIB",orientation:"-",deps:[]},{title:"React MUI: Table | Chart | List",name:"backendless-tabs-jsx",stack:["HTML","CSS","JS","React","React-router"],tags:["UI","FE","API"],desc:`This project serves as a template for a React-based application that implements tabs without backend integration. It showcases various components, including charts, lists, and tables, along with a navigation layout and a router component. The project utilizes modern web development tools and libraries such as React, React Router, Material-UI, and more.

 I'd say - the most interesting for me during implementing this stuff was to force hash-router to act as common brouser-router without hash prepender #`,path:"backendless-tabs-jsx",orientation:"-",deps:["@emotion/react ^11.11.1","@emotion/styled ^11.11.0","@mui/icons-material ^5.14.15","@mui/material ^5.14.15","@mui/styled-engine ^5.14.15","@mui/styled-engine-sc ^6.0.0-alpha.3","@mui/system ^5.4.1","@mui/x-charts ^6.0.0-alpha.17","prop-types ^15.8.1","react ^18.2.0","react-dom ^18.2.0","react-router-dom ^6.17.0","styled-components ^6.1.0"]},{title:"Vue Fetch Random User",name:"random-user-vue",stack:["HTML","CSS","JS","Vue"],tags:["UI","FE","API"],desc:`Simple Vue app that demonstrate easy way to fetch and display user data, utilizing placeholder API: https://randomuser.me/api.
Vue.js is imported via CDN: https://unpkg.com/vue@3/dist/vue.global.js`,path:"random-user-vue",orientation:"-",deps:[],white_bg:!0},{title:"The Base: Layout, Git, JS, TS",name:"devit-team",stack:["HTML","CSS","JS","TS"],tags:["UI","FE","API"],desc:`Here you'll find tasks related to Git, HTML/CSS, JavaScript, and more. Each task is organized in its own subfolder with detailed descriptions and implementations.

The most interesting block there is dedicated to JavaScript/TypeScript. Programming is really some kind of a passion...`,path:"devit-team",orientation:"-",deps:[]},{title:"Web Development Essentials",name:"abz-agency-test-assignment",stack:["HTML","CSS","JS","React","MUI"],tags:["UI","FE","API"],desc:"",path:"abz-agency-test-assignment",orientation:"-",deps:[]},{title:"Nice Gadgets Store - Full-stack App",name:"product-catalog",stack:["HTML","CSS","JS","React","NodeJS"],tags:["UI","FE","BE","DB","API"],desc:"",path:"https://fe-jan23-team-six.github.io/product-catalog/",orientation:"-",deps:[],white_bg:!0},{title:"React Todos Full-stack App",name:"react_todo-app-with-api",stack:["HTML","CSS","JS","React"],tags:["UI","FE","BE","API"],desc:"",path:"react_todo-app-with-api",orientation:"-",deps:[]},{title:"React Task-management Table",name:"react_dynamic-list-of-todos",stack:["HTML","CSS","JS","React"],tags:["UI","FE","API"],desc:"",path:"react_dynamic-list-of-todos",orientation:"-",deps:[]},{title:"React CRM-like people table",name:"react_people-table-basics",stack:["HTML","CSS","JS","React","React-router"],tags:["UI","FE","API"],desc:`This is a React.js application that displays a table of people and allows users to browse details of each person. It uses React Router for navigation and displays information in a user-friendly manner.

 There are real peaple table displayed with interesting heritage relationships, which are highlighted interactively.`,path:"react_people-table-basics/#/people",orientation:"-",deps:["@fortawesome/fontawesome-free ^6.1.2","bulma ^0.9.4","classnames ^2.3.1","react ^18.2.0","react-dom ^18.2.0","react-router-dom ^6.3.0","react-scripts 4.0.3"]},{title:"Vue Travel App with Vue-router",name:"travel-app-vue",stack:["HTML","CSS","JS","Vue","Vue-router"],tags:["UI","FE","API"],desc:"",path:"travel-app-vue",orientation:"-",deps:[],white_bg:!0},{title:"Nuxt simple Theme Toggler Example",name:"nuxt-demo",stack:["HTML","CSS","JS","Vue","Nuxt"],tags:["UI","FE","SSR","API"],desc:"It is a demo of simplicity and power of Vue-Nuxt ecosystem toolkit, their intuitively clearness and DX wich stands for Developer eXperience. It ain't obvious and common practicized to deploy (publish) such a project ot gh-pages, but I've done instanceof, and am proud of myself due to this fact. :)",path:"nuxt-demo",orientation:"-",deps:["@nuxt/postcss8 ^1.1.3","@nuxtjs/color-mode ^3.2.0","@nuxtjs/tailwindcss ^6.4.1","autoprefixer ^10.4.13","gh-pages ^5.0.0","nuxt ^3.2.2","postcss ^8.4.21","tailwindcss ^3.2.7","tailwindcss-dark-mode ^1.1.7","@headlessui/vue ^1.7.10","@heroicons/vue ^2.0.16"]},{title:"Movies Site - Add Movie Form",name:"react_movies-list-add-form",stack:["HTML","CSS","JS","React"],tags:["UI","FE","API"],desc:`Welcome to the React Movies List & Add Form project! This is a simple web application built with React that allows you to manage a list of movies. You can view the list of movies, add new movies, and enjoy an intuitive user interface.
Form gets dynamically validated with react stateful functional components. Everybody loves movies, and I'm not an exceptional person in this case.`,path:"react_movies-list-add-form",orientation:"-",deps:["@cypress/react ^5.12.4","bulma ^0.9.3","classnames ^2.3.1","postcss ^8.4.12","react ^17.0.2","react-dom ^17.0.2","react-scripts ^4.0.3"]},{title:"Custom Shaped Download Page",name:"my-server-io",stack:["HTML","CSS","JS","3D"],tags:["UI","FE","API"],desc:`The myserver.io project is a web application designed to provide a user-friendly interface for downloading and accessing client data. This README offers an overview of the project and highlights its key features.

Project shows use-cases of different CSS modern features e.g. custom shaped areas look as been cutted out from some paper-sheet. Just CSS clip-path.. :)`,path:"my-server-io",orientation:"-",deps:[]},{title:"Three.js 3D Cube",name:"graphics-js",stack:["HTML","CSS","JS","3D"],tags:["UI","FE","API"],desc:"Pretty fine Three.js demo, where 3D cube can be moved with arrow keyboard buttons. The Three.js library is imported via CDN: https://threejs.org/build/three.js. So - it's simple and nice at once example, that technologies are very convinient to use novadays.",path:"graphics-js",orientation:"-",deps:[]},{title:"Wordle - Guess UA word app",name:"wordle-js",stack:["React","TypeScript","HTML","CSS"],tags:["UI","FE","API"],desc:"",path:"wordle-js",orientation:"-",deps:[],white_bg:!0},{title:"Clicker app - pure JavaScript",name:"clicker-js",stack:["HTML","CSS","JS"],tags:["UI","FE","API"],desc:"",path:"clicker-js",orientation:"-",deps:[]}];Array.prototype.shuffle=function(){return this.sort(()=>Math.random()-.5)};e.shuffle();t.shuffle();const b=[e[10],t[0],t[1],e[6],e[7],e[8],e[12],t[4],t[5],t[2],t[3],e[11],t[6],t[7],e[13],e[14],t[8],t[9],e[1],e[3],e[0],e[5],e[2],e[4],e[16],t[12],t[13],t[14],t[15],e[17],t[10],t[11],e[15]],I=(a,s)=>{const o=[];for(let i=0;i<a.length;i+=s){const n=a.slice(i,i+s);o.push(n)}return o},C=I(b,3);function F(a){return a.includes("https")?a:"https://vadym4che.github.io/"+a}export{A,C as c,F as g,b as p};
